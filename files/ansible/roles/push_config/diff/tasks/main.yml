---
### ---------------------------------------------------------------------------
### DIFF THE CONFIGURATION TO SEE IF CHANGES ARE NEEDED
### ---------------------------------------------------------------------------
- name: "### Retrieving the configuration as human readable text"
  juniper_junos_config:
    # user: "{{ provider_info.user }}"
    # passwd: "{{ provider_info.passwd }}"
    # ssh_private_key_file: "{{ provider_info.ssh_private_key_file }}"
    retrieve: "committed"
    format: text
    diff: false
    check: false
    commit: false
  register: committed

### ------------------------------------------------------------
### SAVING CONFIGURATIONS AS A VARIABLE TO BE USED LATER ON
### ------------------------------------------------------------
- name: "### REACH IN AND GRAB THE .config KEY/VALUE FROM HUMAN CONFIG"
  set_fact:
    committed_config: "{{ committed.config }}"

### ------------------------------------------------------------
### WRITING CONFIGURATIONS TO FILES
### ------------------------------------------------------------
- name: "### Writing human readable configuration as a file for backup"
  local_action:
    module: copy
    content: "{{ committed_config }}"
    dest: "backup/{{ inventory_hostname }}/{{ inventory_hostname }}.conf"

### ------------------------------------------------------------
### STRIP OUT FLUFF FROM BACKED UP CONFIGURATION
### ------------------------------------------------------------
- name: Remove blank lines between matches
  lineinfile:
    path: "{{ backup_file }}"
    regexp: '(^\s*$)'
    state: absent

- name: Remove commit comment line
  lineinfile:
    path: "{{ backup_file }}"
    regexp: '(^##.*)'
    state: absent

- name: "### Diff the committed against the local candidate"
  command: "diff {{ backup_file }} {{ completed_config_file }}"
  failed_when: "diff.rc > 1"
  register: diff

- name: print diff to screen
  debug: msg="{{ diff.stdout }}"
  when: "diff.stdout|length > 0"

- name: setting fact if there is a diff on the box
  set_fact:
    is_diff: True
  when: "diff.stdout|length > 0"
---
### ---------------------------------------------------------------------------
### VALIDATE THAT ANSIBLE CONTROL MACHINE IS RUNNING A RECENT ANSIBLE VERSION
### ---------------------------------------------------------------------------
- hosts: all
  connection: local
  gather_facts: False
  become: False
  roles: 
    - juniper.junos
  tasks:
    - name: "Check ansible version >=2.7.8"
      assert:
        msg: "Ansible must be v2.7.8 or higher"
        that:
          - ansible_version.string is version("2.7.8", ">=")
      tags:
        - check
      run_once: True

### ---------------------------------------------------------------------------
### BACKUP DEVICE FACTS and CONFIGS
### ---------------------------------------------------------------------------
- hosts: all
  connection: local
  gather_facts: False
  become: False
  roles: 
    - juniper.junos
  tasks:
    ### -------------------------------------------------
    ### REMOVE AND RECREATE BACKUP DIRECTORIES
    ### -------------------------------------------------
    - name: remove backup directory
      file:
        path: "../{{ backup_directory }}"
        state: absent

    - name: create new backup directory
      file:
        path: "../{{ backup_directory }}"
        state: directory

    - name: create new backup configuration directory
      file:
        path: "../{{ backup_config_directory }}"
        state: directory

    - name: create new backup facts directory
      file:
        path: "../{{ backup_facts_directory }}"
        state: directory

    ### -------------------------------------------------
    ### BACKUP DEVICE INFORMATION
    ### -------------------------------------------------
    - name: "### GET FACTS FROM REMOTE DEVICES ###"
      juniper_junos_facts:
        savedir: "../{{ backup_facts_directory }}/"
        user: "{{ provider_info.user }}"
        passwd: "{{ provider_info.passwd }}"
        # ssh_private_key_file: "{{ provider_info.ssh_private_key_file }}"
        timeout: 240
      register: result

    ### -------------------------------------------------
    ### BACKUP DEVICE CONFIGURATIONS
    ### -------------------------------------------------
    - name: "### Retrieving the configuration as human readable text"
      juniper_junos_config:
        user: "{{ provider_info.user }}"
        passwd: "{{ provider_info.passwd }}"
        # ssh_private_key_file: "{{ provider_info.ssh_private_key_file }}"
        retrieve: "committed"
        format: text
        diff: false
        check: false
        commit: false
      register: committed

    ### ------------------------------------------------------------
    ### SAVING CONFIGURATIONS AS A VARIABLE TO BE USED LATER ON
    ### ------------------------------------------------------------
    - name: "### REACH IN AND GRAB THE .config KEY/VALUE FROM HUMAN CONFIG"
      set_fact:
        committed_config: "{{ committed.config }}"

    ### ------------------------------------------------------------
    ### WRITING CONFIGURATIONS TO FILES
    ### ------------------------------------------------------------
    - name: "### Writing human readable configuration as a file for backup"
      local_action:
        module: copy
        content: "{{ committed_config }}"
        dest: "../{{ backup_file }}"
